from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


def get_currencies_selection(from_to="from", selected_currency=None):
    builder = InlineKeyboardBuilder()
    
    currencies = [
        {"code": "USDT", "symbol": "‚ÇÆ"},
        {"code": "USD", "symbol": "$"},
        {"code": "UAH", "symbol": "‚Ç¥"}
    ]
    
    for currency in currencies:
        if selected_currency and currency["code"] == selected_currency:
            continue
        
        builder.row(
            InlineKeyboardButton(
                text=f"{currency['symbol']} {currency['code']}",
                callback_data=f"currency:{from_to}:{currency['code']}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π —à–∞–≥
    if from_to == "to":
        builder.row(
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="currency:back")
        )
    
    return builder.as_markup()


def get_bank_selection():
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞ (–¥–ª—è UAH)
    """
    builder = InlineKeyboardBuilder()
    
    # –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∞–Ω–∫–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–∑ –ë–î)
    banks = [
        {"id": 1, "name": "–ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫"},
        {"id": 2, "name": "–ú–æ–Ω–æ–±–∞–Ω–∫"},
        {"id": 3, "name": "–ü–£–ú–ë"}
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –±–∞–Ω–∫–∞–º–∏
    for bank in banks:
        builder.row(
            InlineKeyboardButton(
                text=bank["name"],
                callback_data=f"bank:{bank['id']}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="bank:back")
    )
    
    return builder.as_markup()


def get_order_actions(order_id, status):
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞—è–≤–∫–æ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ—ë —Å—Ç–∞—Ç—É—Å–∞
    :param order_id: ID –∑–∞—è–≤–∫–∏
    :param status: —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
    """
    builder = InlineKeyboardBuilder()
    
    if status == "created":
        # –î–ª—è —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏
        builder.row(
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"order:confirm:{order_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"order:cancel:{order_id}")
        )
    elif status == "awaiting_payment":
        # –î–ª—è –∑–∞—è–≤–∫–∏, –æ–∂–∏–¥–∞—é—â–µ–π –æ–ø–ª–∞—Ç—ã
        builder.row(
            InlineKeyboardButton(text="üí∞ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f"order:paid:{order_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"order:cancel:{order_id}")
        )
    elif status == "payment_confirmed":
        # –î–ª—è –∑–∞—è–≤–∫–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (–¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞)
        builder.row(
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"order:approve:{order_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"order:reject:{order_id}")
        )
    
    return builder.as_markup()


def get_pagination_keyboard(page=1, total_pages=1, prefix="page"):
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    :param page: —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    :param total_pages: –≤—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    :param prefix: –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    buttons = []
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if page > 1:
        buttons.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"{prefix}:{page-1}")
        )
    
    # –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    buttons.append(
        InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="ignore")
    )
    
    # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
    if page < total_pages:
        buttons.append(
            InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"{prefix}:{page+1}")
        )
    
    builder.row(*buttons)
    
    return builder.as_markup()


def get_profile_settings():
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è
    """
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üî§ –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", callback_data="profile:language")
    )
    
    builder.row(
        InlineKeyboardButton(text="üì± –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="profile:contacts")
    )
    
    return builder.as_markup()


def get_confirmation_keyboard(action, item_id):
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    :param action: –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    :param item_id: ID —ç–ª–µ–º–µ–Ω—Ç–∞
    """
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm:{action}:{item_id}"),
        InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"cancel:{action}:{item_id}")
    )
    
    return builder.as_markup()