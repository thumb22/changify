# handlers/user.py
from aiogram import Dispatcher, types
from aiogram.filters import Text
from aiogram.types import ReplyKeyboardMarkup
from keyboards.reply import get_main_keyboard
from utils.error_handler import handle_errors
from utils.db_utils import get_all_currencies, get_exchange_rate

async def process_rates_command(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–∏—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç"""
    engine = message.bot.get("db_engine")
    
    currencies = await get_all_currencies(engine)
    
    text = "üìä <b>–ê–∫—Ç—É–∞–ª—å–Ω—ñ –∫—É—Ä—Å–∏ –æ–±–º—ñ–Ω—É:</b>\n\n"
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä
    pairs = [
        ("USDT", "USD"), ("USD", "USDT"),
        ("USDT", "UAH"), ("UAH", "USDT")
    ]
    
    for from_curr, to_curr in pairs:
        rate = await get_exchange_rate(engine, from_curr, to_curr)
        if rate:
            text += f"‚Ä¢ {from_curr} ‚Üí {to_curr}: <b>{rate:.2f}</b>\n"
    
    text += "\n–î–ª—è –æ–±–º—ñ–Ω—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫—É 'üîÑ –û–±–º—ñ–Ω –≤–∞–ª—é—Ç'"
    
    await message.answer(text, parse_mode="HTML")

async def process_help_button(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"""
    await message.answer(
        "üÜò <b>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞</b>\n\n"
        "–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤—ñ—Å—É, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.\n\n"
        "–î–ª—è –∑–≤'—è–∑–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ.",
        reply_markup=get_support_keyboard()
    )

def get_support_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"""
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    from aiogram.types import InlineKeyboardButton
    
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É", callback_data="support:message"))
    
    return builder.as_markup()

def setup(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    dp.message.register(process_rates_command, Text(text="üìä –ö—É—Ä—Å–∏ –≤–∞–ª—é—Ç"))
    dp.message.register(process_help_button, Text(text="üÜò –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"))