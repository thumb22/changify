from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import (
    CommandHandler, CallbackContext, ConversationHandler, 
    MessageHandler, CallbackQueryHandler, filters
)
from datetime import datetime

from database.models import User, ExchangeRate, Bank, PaymentMethod, Currency, Commission
from utils import admin_required
from keyboards import get_admin_keyboard

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
(
    ADMIN_MENU, RATES_MENU, CURRENCY_MENU, BANK_MENU, 
    PAYMENT_METHOD_MENU, COMMISSION_MENU, MANAGER_MENU,
    
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
    SELECT_CURRENCY_PAIR, INPUT_NEW_RATE,
    
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏
    ADD_CURRENCY_NAME, ADD_CURRENCY_CODE, ADD_CURRENCY_TYPE,
    REMOVE_CURRENCY_CONFIRM,
    
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–Ω–∫–∞–º–∏
    ADD_BANK_NAME, ADD_BANK_DETAILS,
    REMOVE_BANK_CONFIRM,
    
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–∞–º–∏ –æ–ø–ª–∞—Ç—ã
    ADD_PAYMENT_METHOD_NAME, ADD_PAYMENT_METHOD_DETAILS,
    REMOVE_PAYMENT_METHOD_CONFIRM,
    
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏—è–º–∏
    SELECT_COMMISSION_PAIR, INPUT_COMMISSION_VALUE,
    
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
    ADD_MANAGER_USER_ID, REMOVE_MANAGER_CONFIRM
) = range(25)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
@admin_required
def admin_command(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
    user = update.effective_user
    
    reply_markup = get_admin_keyboard()
    update.message.reply_text(
        f"üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å Changify\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=reply_markup
    )
    
    return ADMIN_MENU

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç ===

@admin_required
def rates_menu(update: Update, context: CallbackContext) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
    rates = ExchangeRate.get_all_rates()
    
    keyboard = []
    for rate in rates:
        pair_name = f"{rate.from_currency.code}/{rate.to_currency.code}"
        rate_value = f"{rate.rate:.4f}"
        keyboard.append([InlineKeyboardButton(
            f"{pair_name}: {rate_value}",
            callback_data=f"edit_rate_{rate.id}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –ø–∞—Ä—É", callback_data="add_rate")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "üí± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç\n\n"
        "–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã: \n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
        reply_markup=reply_markup
    )
    
    return RATES_MENU

@admin_required
def add_rate_select_pair(update: Update, context: CallbackContext) -> int:
    """–ü–µ—Ä–≤—ã–π —à–∞–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ - –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã
    currencies = Currency.get_all_currencies()
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–∞—Ä
    pairs = []
    for base_currency in currencies:
        for quote_currency in currencies:
            if base_currency.id != quote_currency.id:
                pairs.append(f"{base_currency.code}/{quote_currency.code}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–∏
    keyboard = []
    for pair in pairs:
        keyboard.append([InlineKeyboardButton(pair, callback_data=f"pair_{pair}")])
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_rates")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞:",
        reply_markup=reply_markup
    )
    
    return SELECT_CURRENCY_PAIR

@admin_required
def input_new_rate(update: Update, context: CallbackContext) -> int:
    """–í—Ç–æ—Ä–æ–π —à–∞–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ - –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞—Ä—É –∏–∑ callback_data
    pair = query.data.replace("pair_", "")
    context.user_data["selected_pair"] = pair
    
    base_code, quote_code = pair.split("/")
    
    query.edit_message_text(
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å –æ–±–º–µ–Ω–∞ –¥–ª—è –ø–∞—Ä—ã {pair}:\n"
        f"(–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è {base_code}/{quote_code} = 1.05, –≤–≤–µ–¥–∏—Ç–µ 1.05)"
    )
    
    return INPUT_NEW_RATE

@admin_required
def save_new_rate(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç"""
    try:
        new_rate = float(update.message.text.strip())
        if new_rate <= 0:
            update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞: –ö—É—Ä—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:"
            )
            return INPUT_NEW_RATE
        
        pair = context.user_data.get("selected_pair")
        base_code, quote_code = pair.split("/")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–∞–ª—é—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        base_currency = Currency.get_by_code(base_code)
        quote_currency = Currency.get_by_code(quote_code)
        
        if not base_currency or not quote_currency:
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –û–¥–Ω–∞ –∏–∑ –≤–∞–ª—é—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return rates_menu(update, context)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫—É—Ä—Å
        existing_rate = ExchangeRate.get_rate(base_currency.id, quote_currency.id)
        
        if existing_rate:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫—É—Ä—Å
            ExchangeRate.update_rate(
                base_currency.id, 
                quote_currency.id, 
                new_rate
            )
            message = f"‚úÖ –ö—É—Ä—Å –¥–ª—è –ø–∞—Ä—ã {pair} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_rate}"
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫—É—Ä—Å
            ExchangeRate.create(
                from_currency_id=base_currency.id,
                to_currency_id=quote_currency.id,
                rate=new_rate
            )
            message = f"‚úÖ –ù–æ–≤—ã–π –∫—É—Ä—Å –¥–ª—è –ø–∞—Ä—ã {pair} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω: {new_rate}"
        
        update.message.reply_text(message)
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "selected_pair" in context.user_data:
            del context.user_data["selected_pair"]
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        reply_markup = get_admin_keyboard()
        update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )
        return ADMIN_MENU
        
    except ValueError:
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 1.05"
        )
        return INPUT_NEW_RATE

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏ ===

@admin_required
def currency_menu(update: Update, context: CallbackContext) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–∞–ª—é—Ç—ã
    currencies = Currency.get_all_currencies()
    
    keyboard = []
    for currency in currencies:
        keyboard.append([InlineKeyboardButton(
            f"{currency.code} - {currency.name} ({currency.type})",
            callback_data=f"currency_{currency.id}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª—é—Ç—É", callback_data="add_currency")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏\n\n"
        "–¢–µ–∫—É—â–∏–µ –≤–∞–ª—é—Ç—ã: \n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
        reply_markup=reply_markup
    )
    
    return CURRENCY_MENU

@admin_required
def add_currency_name(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π –≤–∞–ª—é—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    query.edit_message_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–î–æ–ª–ª–∞—Ä –°–®–ê'):"
    )
    
    return ADD_CURRENCY_NAME

@admin_required
def add_currency_code(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –Ω–æ–≤–æ–π –≤–∞–ª—é—Ç—ã"""
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã
    context.user_data["new_currency_name"] = update.message.text.strip()
    
    update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'USD'):"
    )
    
    return ADD_CURRENCY_CODE

@admin_required
def add_currency_type(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å —Ç–∏–ø–∞ –Ω–æ–≤–æ–π –≤–∞–ª—é—Ç—ã"""
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –≤–∞–ª—é—Ç—ã
    context.user_data["new_currency_code"] = update.message.text.strip().upper()
    
    keyboard = [
        [InlineKeyboardButton("–§–∏–∞—Ç", callback_data="type_fiat")],
        [InlineKeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", callback_data="type_crypto")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞–ª—é—Ç—ã:",
        reply_markup=reply_markup
    )
    
    return ADD_CURRENCY_TYPE

@admin_required
def save_new_currency(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∞–ª—é—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    currency_type = "fiat" if query.data == "type_fiat" else "crypto"
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    name = context.user_data.get("new_currency_name")
    code = context.user_data.get("new_currency_code")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –≤–∞–ª—é—Ç–∞ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º
        existing_currency = Currency.get_by_code(code)
        
        if existing_currency:
            query.edit_message_text(
                f"‚ùå –û—à–∏–±–∫–∞: –í–∞–ª—é—Ç–∞ —Å –∫–æ–¥–æ–º {code} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
            )
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–∞–ª—é—Ç—É
            Currency.create(
                name=name,
                code=code,
                type=currency_type
            )
            
            query.edit_message_text(
                f"‚úÖ –ù–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞:\n"
                f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                f"–ö–æ–¥: {code}\n"
                f"–¢–∏–ø: {currency_type}"
            )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "new_currency_name" in context.user_data:
            del context.user_data["new_currency_name"]
        if "new_currency_code" in context.user_data:
            del context.user_data["new_currency_code"]
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_admin_keyboard()
        )
        return ADMIN_MENU
        
    except Exception as e:
        query.edit_message_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–∞–ª—é—Ç—ã: {str(e)}"
        )
        return currency_menu(update, context)

@admin_required
def remove_currency(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    currency_id = int(query.data.split("_")[1])
    context.user_data["currency_to_remove"] = currency_id
    
    currency = Currency.get_by_id(currency_id)
    
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"confirm_remove_currency"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_remove_currency")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–∞–ª—é—Ç—É {currency.code} - {currency.name}?\n\n"
        f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Ç–∞–∫–∂–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞!",
        reply_markup=reply_markup
    )
    
    return REMOVE_CURRENCY_CONFIRM

@admin_required
def remove_currency_confirm(update: Update, context: CallbackContext) -> int:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    if query.data == "confirm_remove_currency":
        currency_id = context.user_data.get("currency_to_remove")
        
        if currency_id:
            currency = Currency.get_by_id(currency_id)
            
            if currency:
                # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∫—É—Ä—Å—ã
                ExchangeRate.delete_rates_by_currency(currency_id)
                
                # –£–¥–∞–ª—è–µ–º –≤–∞–ª—é—Ç—É
                Currency.delete(currency_id)
                
                query.edit_message_text(
                    f"‚úÖ –í–∞–ª—é—Ç–∞ {currency.code} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –≤–º–µ—Å—Ç–µ —Å–æ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏."
                )
            else:
                query.edit_message_text(
                    "‚ùå –û—à–∏–±–∫–∞: –í–∞–ª—é—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
                )
    else:
        query.edit_message_text(
            "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ."
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "currency_to_remove" in context.user_data:
        del context.user_data["currency_to_remove"]
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_keyboard()
    )
    return ADMIN_MENU

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–∫–∞–º–∏ ===

@admin_required
def bank_menu(update: Update, context: CallbackContext) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–Ω–∫–∞–º–∏"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±–∞–Ω–∫–∏
    banks = Bank.get_all()
    
    keyboard = []
    for bank in banks:
        keyboard.append([InlineKeyboardButton(
            f"{bank.name}",
            callback_data=f"bank_{bank.id}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–∞–Ω–∫", callback_data="add_bank")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "üè¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–∫–∞–º–∏\n\n"
        "–¢–µ–∫—É—â–∏–µ –±–∞–Ω–∫–∏: \n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π:",
        reply_markup=reply_markup
    )
    
    return BANK_MENU

@admin_required
def add_bank_name(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±–∞–Ω–∫–∞"""
    query = update.callback_query
    query.answer()
    
    query.edit_message_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–∞–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫'):"
    )
    
    return ADD_BANK_NAME

@admin_required
def add_bank_details(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π –Ω–æ–≤–æ–≥–æ –±–∞–Ω–∫–∞"""
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞
    context.user_data["new_bank_name"] = update.message.text.strip()
    
    update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –±–∞–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–ø–ª–∞—Ç–µ):"
    )
    
    return ADD_BANK_DETAILS

@admin_required
def save_new_bank(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–∞–Ω–∫–∞"""
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏ –±–∞–Ω–∫–∞
    bank_details = update.message.text.strip()
    bank_name = context.user_data.get("new_bank_name")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±–∞–Ω–∫
        Bank.create(
            name=bank_name,
            details=bank_details
        )
        
        update.message.reply_text(
            f"‚úÖ –ù–æ–≤—ã–π –±–∞–Ω–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {bank_name}\n"
            f"–î–µ—Ç–∞–ª–∏: {bank_details}"
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "new_bank_name" in context.user_data:
            del context.user_data["new_bank_name"]
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        reply_markup = get_admin_keyboard()
        update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )
        return ADMIN_MENU
        
    except Exception as e:
        update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–∞–Ω–∫–∞: {str(e)}"
        )
        return bank_menu(update, context)

@admin_required
def remove_bank(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –±–∞–Ω–∫–∞"""
    query = update.callback_query
    query.answer()
    
    bank_id = int(query.data.split("_")[1])
    context.user_data["bank_to_remove"] = bank_id
    
    bank = Bank.get_by_id(bank_id)
    
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"confirm_remove_bank"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_remove_bank")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –±–∞–Ω–∫ {bank.name}?",
        reply_markup=reply_markup
    )
    
    return REMOVE_BANK_CONFIRM

@admin_required
def remove_bank_confirm(update: Update, context: CallbackContext) -> int:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –±–∞–Ω–∫–∞"""
    query = update.callback_query
    query.answer()
    
    if query.data == "confirm_remove_bank":
        bank_id = context.user_data.get("bank_to_remove")
        
        if bank_id:
            bank = Bank.get_by_id(bank_id)
            
            if bank:
                # –£–¥–∞–ª—è–µ–º –±–∞–Ω–∫
                Bank.delete(bank_id)
                
                query.edit_message_text(
                    f"‚úÖ –ë–∞–Ω–∫ {bank.name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω."
                )
            else:
                query.edit_message_text(
                    "‚ùå –û—à–∏–±–∫–∞: –ë–∞–Ω–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω."
                )
    else:
        query.edit_message_text(
            "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –±–∞–Ω–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ."
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "bank_to_remove" in context.user_data:
        del context.user_data["bank_to_remove"]
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_keyboard()
    )
    return ADMIN_MENU

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞–º–∏ –æ–ø–ª–∞—Ç—ã ===

@admin_required
def payment_method_menu(update: Update, context: CallbackContext) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞–º–∏ –æ–ø–ª–∞—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã
    payment_methods = PaymentMethod.get_all()
    
    keyboard = []
    for method in payment_methods:
        keyboard.append([InlineKeyboardButton(
            f"{method.name}",
            callback_data=f"payment_method_{method.id}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã", callback_data="add_payment_method")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "üí≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞–º–∏ –æ–ø–ª–∞—Ç—ã\n\n"
        "–¢–µ–∫—É—â–∏–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã: \n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π:",
        reply_markup=reply_markup
    )
    
    return PAYMENT_METHOD_MENU

@admin_required
def add_payment_method_name(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    query.edit_message_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'PayPal'):"
    )
    
    return ADD_PAYMENT_METHOD_NAME

@admin_required
def add_payment_method_details(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π –Ω–æ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
    context.user_data["new_payment_method_name"] = update.message.text.strip()
    
    update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏):"
    )
    
    return ADD_PAYMENT_METHOD_DETAILS

@admin_required
def save_new_payment_method(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
    payment_method_details = update.message.text.strip()
    payment_method_name = context.user_data.get("new_payment_method_name")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã
        PaymentMethod.create(
            name=payment_method_name,
            details=payment_method_details
        )
        
        update.message.reply_text(
            f"‚úÖ –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {payment_method_name}\n"
            f"–î–µ—Ç–∞–ª–∏: {payment_method_details}"
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "new_payment_method_name" in context.user_data:
            del context.user_data["new_payment_method_name"]
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        reply_markup = get_admin_keyboard()
        update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )
        return ADMIN_MENU
        
    except Exception as e:
        update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã: {str(e)}"
        )
        return payment_method_menu(update, context)

@admin_required
def remove_payment_method(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    payment_method_id = int(query.data.split("_")[2])
    context.user_data["payment_method_to_remove"] = payment_method_id
    
    payment_method = PaymentMethod.get_by_id(payment_method_id)
    
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"confirm_remove_payment_method"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_remove_payment_method")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã {payment_method.name}?",
        reply_markup=reply_markup
    )
    
    return REMOVE_PAYMENT_METHOD_CONFIRM

@admin_required
def remove_payment_method_confirm(update: Update, context: CallbackContext) -> int:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    query = update.callback_query
    query.answer()
    
    if query.data == "confirm_remove_payment_method":
        payment_method_id = context.user_data.get("payment_method_to_remove")
        
        if payment_method_id:
            payment_method = PaymentMethod.get_by_id(payment_method_id)
            
            if payment_method:
                # –£–¥–∞–ª—è–µ–º –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã
                PaymentMethod.delete(payment_method_id)
                
                query.edit_message_text(
                    f"‚úÖ –ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã {payment_method.name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω."
                )
            else:
                query.edit_message_text(
                    "‚ùå –û—à–∏–±–∫–∞: –ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω."
                )
    else:
        query.edit_message_text(
            "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ."
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "payment_method_to_remove" in context.user_data:
        del context.user_data["payment_method_to_remove"]
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_keyboard()
    )
    return ADMIN_MENU

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏—è–º–∏ ===

@admin_required
def commission_menu(update: Update, context: CallbackContext) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏—è–º–∏"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–∏—Å—Å–∏–∏
    commissions = Commission.get_all()
    
    keyboard = []
    for commission in commissions:
        pair_name = f"{commission.from_currency.code}/{commission.to_currency.code}"
        keyboard.append([InlineKeyboardButton(
            f"{pair_name}: {commission.value}%",
            callback_data=f"commission_{commission.id}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∏—Å—Å–∏—é", callback_data="add_commission")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "üí∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏—è–º–∏\n\n"
        "–¢–µ–∫—É—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏: \n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∏—Å—Å–∏—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:",
        reply_markup=reply_markup
    )
    
    return COMMISSION_MENU

@admin_required
def add_commission_select_pair(update: Update, context: CallbackContext) -> int:
    """–ü–µ—Ä–≤—ã–π —à–∞–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–∏ - –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã
    currencies = Currency.get_all_currencies()
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–∞—Ä
    pairs = []
    for base_currency in currencies:
        for quote_currency in currencies:
            if base_currency.id != quote_currency.id:
                pairs.append(f"{base_currency.code}/{quote_currency.code}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–∏
    keyboard = []
    for pair in pairs:
        keyboard.append([InlineKeyboardButton(pair, callback_data=f"commission_pair_{pair}")])
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_commissions")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–∏:",
        reply_markup=reply_markup
    )
    
    return SELECT_COMMISSION_PAIR

@admin_required
def input_commission_value(update: Update, context: CallbackContext) -> int:
    """–í—Ç–æ—Ä–æ–π —à–∞–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–∏ - –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–∏"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞—Ä—É –∏–∑ callback_data
    pair = query.data.replace("commission_pair_", "")
    context.user_data["selected_commission_pair"] = pair
    
    base_code, quote_code = pair.split("/")
    
    query.edit_message_text(
        f"–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –¥–ª—è –ø–∞—Ä—ã {pair}:\n"
        f"(–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∫–æ–º–∏—Å—Å–∏–∏ 2%, –≤–≤–µ–¥–∏—Ç–µ 2.0)"
    )
    
    return INPUT_COMMISSION_VALUE

@admin_required
def save_new_commission(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–º–∏—Å—Å–∏–∏"""
    try:
        commission_value = float(update.message.text.strip())
        if commission_value < 0:
            update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞: –ö–æ–º–∏—Å—Å–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:"
            )
            return INPUT_COMMISSION_VALUE
        
        pair = context.user_data.get("selected_commission_pair")
        base_code, quote_code = pair.split("/")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–∞–ª—é—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        base_currency = Currency.get_by_code(base_code)
        quote_currency = Currency.get_by_code(quote_code)
        
        if not base_currency or not quote_currency:
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –û–¥–Ω–∞ –∏–∑ –≤–∞–ª—é—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return commission_menu(update, context)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è
        existing_commission = Commission.get_by_currencies(base_currency.id, quote_currency.id)
        
        if existing_commission:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∏—Å—Å–∏—é
            Commission.update(
                existing_commission.id,
                commission_value
            )
            message = f"‚úÖ –ö–æ–º–∏—Å—Å–∏—è –¥–ª—è –ø–∞—Ä—ã {pair} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {commission_value}%"
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–∏—Å—Å–∏—é
            Commission.create(
                from_currency_id=base_currency.id,
                to_currency_id=quote_currency.id,
                value=commission_value
            )
            message = f"‚úÖ –ù–æ–≤–∞—è –∫–æ–º–∏—Å—Å–∏—è –¥–ª—è –ø–∞—Ä—ã {pair} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {commission_value}%"
        
        update.message.reply_text(message)
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "selected_commission_pair" in context.user_data:
            del context.user_data["selected_commission_pair"]
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        reply_markup = get_admin_keyboard()
        update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )
        return ADMIN_MENU
        
    except ValueError:
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 2.0"
        )
        return INPUT_COMMISSION_VALUE

@admin_required
def remove_commission(update: Update, context: CallbackContext) -> int:
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏"""
    query = update.callback_query
    query.answer()
    
    commission_id = int(query.data.split("_")[1])
    commission = Commission.get_by_id(commission_id)
    
    if commission:
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∏—Å—Å–∏—é
        Commission.delete(commission_id)
        pair_name = f"{commission.from_currency.code}/{commission.to_currency.code}"
        
        query.edit_message_text(
            f"‚úÖ –ö–æ–º–∏—Å—Å–∏—è –¥–ª—è –ø–∞—Ä—ã {pair_name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞."
        )
    else:
        query.edit_message_text(
            "‚ùå –û—à–∏–±–∫–∞: –ö–æ–º–∏—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –∫–æ–º–∏—Å—Å–∏–π
    return commission_menu(update, context)

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏ ===

@admin_required
def manager_menu(update: Update, context: CallbackContext) -> int:
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏"""
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    managers = User.get_managers()
    
    keyboard = []
    for manager in managers:
        display_name = f"{manager.first_name}"
        if manager.last_name:
            display_name += f" {manager.last_name}"
        if manager.username:
            display_name += f" (@{manager.username})"
            
        keyboard.append([InlineKeyboardButton(
            display_name,
            callback_data=f"manager_{manager.id}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", callback_data="add_manager")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        "üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏\n\n"
        "–¢–µ–∫—É—â–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã: \n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ:",
        reply_markup=reply_markup
    )
    
    return MANAGER_MENU

@admin_required
def add_manager_user_id(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –º–µ–Ω–µ–¥–∂–µ—Ä—ã"""
    query = update.callback_query
    query.answer()
    
    query.edit_message_text(
        "–í–≤–µ–¥–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:\n"
        "(–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ)"
    )
    
    return ADD_MANAGER_USER_ID

@admin_required
def save_new_manager(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    try:
        user_id = int(update.message.text.strip())
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = User.get_by_telegram_id(user_id)
        
        if not user:
            update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ."
            )
            return ADD_MANAGER_USER_ID
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
        if user.role == 'manager':
            update.message.reply_text(
                f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."
            )
        elif user.role == 'admin':
            update.message.reply_text(
                f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞–∑–Ω–∞—á–∞—Ç—å –µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."
            )
        else:
            # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
            User.update_role(user.id, 'manager')
            
            update.message.reply_text(
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} {user.last_name if user.last_name else ''} "
                f"—É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."
            )
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        reply_markup = get_admin_keyboard()
        update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )
        return ADMIN_MENU
        
    except ValueError:
        update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        )
        return ADD_MANAGER_USER_ID

@admin_required
def remove_manager(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    query = update.callback_query
    query.answer()
    
    manager_id = int(query.data.split("_")[1])
    context.user_data["manager_to_remove"] = manager_id
    
    manager = User.get_by_id(manager_id)
    
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"confirm_remove_manager"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_remove_manager")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    display_name = f"{manager.first_name}"
    if manager.last_name:
        display_name += f" {manager.last_name}"
    if manager.username:
        display_name += f" (@{manager.username})"
    
    query.edit_message_text(
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ {display_name}?",
        reply_markup=reply_markup
    )
    
    return REMOVE_MANAGER_CONFIRM

@admin_required
def remove_manager_confirm(update: Update, context: CallbackContext) -> int:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    query = update.callback_query
    query.answer()
    
    if query.data == "confirm_remove_manager":
        manager_id = context.user_data.get("manager_to_remove")
        
        if manager_id:
            manager = User.get_by_id(manager_id)
            
            if manager:
                # –ü–æ–Ω–∏–∂–∞–µ–º —Ä–æ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                User.update_role(manager.id, 'user')
                
                display_name = f"{manager.first_name}"
                if manager.last_name:
                    display_name += f" {manager.last_name}"
                
                query.edit_message_text(
                    f"‚úÖ {display_name} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."
                )
            else:
                query.edit_message_text(
                    "‚ùå –û—à–∏–±–∫–∞: –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω."
                )
    else:
        query.edit_message_text(
            "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ."
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if "manager_to_remove" in context.user_data:
        del context.user_data["manager_to_remove"]
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_keyboard()
    )
    return ADMIN_MENU

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –º–µ–Ω—é ===

@admin_required
def back_to_admin(update: Update, context: CallbackContext) -> int:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    query = update.callback_query
    query.answer()
    
    reply_markup = get_admin_keyboard()
    query.edit_message_text(
        "üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å Changify\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=reply_markup
    )
    
    return ADMIN_MENU

@admin_required
def back_to_rates(update: Update, context: CallbackContext) -> int:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞–º–∏"""
    return rates_menu(update, context)

@admin_required
def back_to_currencies(update: Update, context: CallbackContext) -> int:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏"""
    return currency_menu(update, context)

@admin_required
def back_to_banks(update: Update, context: CallbackContext) -> int:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–Ω–∫–∞–º–∏"""
    return bank_menu(update, context)

@admin_required
def back_to_payment_methods(update: Update, context: CallbackContext) -> int:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞–º–∏ –æ–ø–ª–∞—Ç—ã"""
    return payment_method_menu(update, context)

@admin_required
def back_to_commissions(update: Update, context: CallbackContext) -> int:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏—è–º–∏"""
    return commission_menu(update, context)

@admin_required
def back_to_managers(update: Update, context: CallbackContext) -> int:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏"""
    return manager_menu(update, context)

# === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ===

def register_admin_handlers(dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    
    # ConversationHandler –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
    admin_conv_handler = ConversationHandler(
        entry_points=[CommandHandler('admin', admin_command)],
        states={
            ADMIN_MENU: [
                CallbackQueryHandler(rates_menu, pattern='^rates$'),
                CallbackQueryHandler(currency_menu, pattern='^currencies$'),
                CallbackQueryHandler(bank_menu, pattern='^banks$'),
                CallbackQueryHandler(payment_method_menu, pattern='^payment_methods$'),
                CallbackQueryHandler(commission_menu, pattern='^commissions$'),
                CallbackQueryHandler(manager_menu, pattern='^managers$'),
            ],
            
            # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞–º–∏
            RATES_MENU: [
                CallbackQueryHandler(add_rate_select_pair, pattern='^add_rate$'),
                CallbackQueryHandler(back_to_admin, pattern='^back_to_admin$'),
                CallbackQueryHandler(rates_menu, pattern='^edit_rate_\d+$'),
            ],
            SELECT_CURRENCY_PAIR: [
                CallbackQueryHandler(input_new_rate, pattern='^pair_\w+/\w+$'),
                CallbackQueryHandler(back_to_rates, pattern='^back_to_rates$'),
            ],
            INPUT_NEW_RATE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, save_new_rate),
            ],
            
            # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏
            CURRENCY_MENU: [
                CallbackQueryHandler(add_currency_name, pattern='^add_currency$'),
                CallbackQueryHandler(back_to_admin, pattern='^back_to_admin$'),
                CallbackQueryHandler(remove_currency, pattern='^currency_\d+$'),
            ],
            ADD_CURRENCY_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, add_currency_code),
            ],
            ADD_CURRENCY_CODE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, add_currency_type),
            ],
            ADD_CURRENCY_TYPE: [
                CallbackQueryHandler(save_new_currency, pattern='^type_(fiat|crypto)$'),
            ],
            REMOVE_CURRENCY_CONFIRM: [
                CallbackQueryHandler(remove_currency_confirm, pattern='^confirm_remove_currency$'),
                CallbackQueryHandler(back_to_currencies, pattern='^cancel_remove_currency$'),
            ],
            
            # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–Ω–∫–∞–º–∏
            BANK_MENU: [
                CallbackQueryHandler(add_bank_name, pattern='^add_bank$'),
                CallbackQueryHandler(back_to_admin, pattern='^back_to_admin$'),
                CallbackQueryHandler(remove_bank, pattern='^bank_\d+$'),
            ],
            ADD_BANK_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, add_bank_details),
            ],
            ADD_BANK_DETAILS: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, save_new_bank),
            ],
            REMOVE_BANK_CONFIRM: [
                CallbackQueryHandler(remove_bank_confirm, pattern='^confirm_remove_bank$'),
                CallbackQueryHandler(back_to_banks, pattern='^cancel_remove_bank$'),
            ],
            
            # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞–º–∏ –æ–ø–ª–∞—Ç—ã
            PAYMENT_METHOD_MENU: [
                CallbackQueryHandler(add_payment_method_name, pattern='^add_payment_method$'),
                CallbackQueryHandler(back_to_admin, pattern='^back_to_admin$'),
                CallbackQueryHandler(remove_payment_method, pattern='^payment_method_\d+$'),
            ],
            ADD_PAYMENT_METHOD_NAME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, add_payment_method_details),
            ],
            ADD_PAYMENT_METHOD_DETAILS: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, save_new_payment_method),
            ],
            REMOVE_PAYMENT_METHOD_CONFIRM: [
                CallbackQueryHandler(remove_payment_method_confirm, pattern='^confirm_remove_payment_method$'),
                CallbackQueryHandler(back_to_payment_methods, pattern='^cancel_remove_payment_method$'),
            ],
            
            # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏—è–º–∏
            COMMISSION_MENU: [
                CallbackQueryHandler(add_commission_select_pair, pattern='^add_commission$'),
                CallbackQueryHandler(back_to_admin, pattern='^back_to_admin$'),
                CallbackQueryHandler(remove_commission, pattern='^commission_\d+$'),
            ],
            SELECT_COMMISSION_PAIR: [
                CallbackQueryHandler(input_commission_value, pattern='^commission_pair_\w+/\w+$'),
                CallbackQueryHandler(back_to_commissions, pattern='^back_to_commissions$'),
            ],
            INPUT_COMMISSION_VALUE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, save_new_commission),
            ],
            
            # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
            MANAGER_MENU: [
                CallbackQueryHandler(add_manager_user_id, pattern='^add_manager$'),
                CallbackQueryHandler(back_to_admin, pattern='^back_to_admin$'),
                CallbackQueryHandler(remove_manager, pattern='^manager_\d+$'),
            ],
            ADD_MANAGER_USER_ID: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, save_new_manager),
            ],
            REMOVE_MANAGER_CONFIRM: [
                CallbackQueryHandler(remove_manager_confirm, pattern='^confirm_remove_manager$'),
                CallbackQueryHandler(back_to_managers, pattern='^cancel_remove_manager$'),
            ],
        },
        fallbacks=[CommandHandler('cancel', lambda u, c: ConversationHandler.END)],
        allow_reentry=True,
    )
    
    dispatcher.add_handler(admin_conv_handler)